package atul.learning.Stacks;

public class ReversalOfStringUsingStack {
	
	char[] charStack;
	int stackSize;
	int top;
	
	public ReversalOfStringUsingStack(int size) {
	    this.stackSize=size;  
		this.charStack=new char[this.stackSize];
		this.top=-1;
	}
	
	public static void main(String[] args) {
		String s="Barkha";
		int len=s.length();
		ReversalOfStringUsingStack rs = new ReversalOfStringUsingStack(len);
		try {
			String ss=rs.reverseString("Barkha");
			System.out.println("Reversal of String Barkha : " + ss);
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	private  String reverseString(String string) throws Exception {
		if (string.equals(null)) {
			throw new Exception("String is empty,cannot reverse null and shit");
		}

		StringBuilder sb = new StringBuilder();
		int length = string.length();
		for (int i = 0; i < length; i++) {
			this.push(string.charAt(i));
		}
       
		while(!this.isStackEmpty())
		{
			sb.append(pop());
		}
		return sb.toString();
		
	}

	

	private char pop()throws Exception {
		if(top<0){
			throw new Exception("stack is empty,cannot pop anything");
		}
		char c=this.charStack[top--];

		return (Character)c;
	}

	private boolean isStackEmpty() {
		return (top<0);
	}

	private void push(char charAt)throws Exception{
      if(top==stackSize-1)
    	  throw new Exception("Cannot insert stack is alreay full");
      this.charStack[++top]=charAt;
      System.out.println("character inserted");
	}
   
}
